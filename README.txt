Αντωνία Κρασουδάκη
csd4140

Αρχικά, το αναγνωστήριο υλοποιήθηκε ως ένας πίνακας ακεραίων μεγέθους 8 θέσεων,ενώ η
ουρά / διάδρομος αναμονής υλοποιήθηκε ως ένας πίνακας από δείκτες προς ακέραιους.
Αυτό γίνεται έτσι ώστε να μπορούμε να δεσμεύσουμε δυναμικά μνήμη ανάλογα με το
πόσοι μαθητές θα χρειαστεί να περιμένουν.Όταν δημιουργείται ένα νήμα/μαθητής 
καλείται η ρουτίνα και εκεί χρησιμοποιούμε ένα mutex για να διασφαλίσουμε ότι
ένα νήμα θα εισέρχεται στην κρίσιμη περιοχή (study room) τη φορά.Μέσα στην κρίσιμη 
περιοχή, στην while (entered_study > 7) ελέγχουμε αν το αναγνωστήριο έχει γεμίσει 
χρησιμοποιώντας τον μετρητή entered_study. Όσο το αναγνωστήριο είναι γεμάτο,
το νήμα πρέπει να περιμένει μέχρι να αδειάσει πλήρως. Αυτό γίνεται με τη χρήση της 
pthread_cond_wait η οποία πρακτικά κανει unlock το mutex και περιμένει για ένα σήμα 
προκειμένου να ελέγξει ξανά την συνθήκη της while για να συνεχίσει. Όταν ένα νήμα
βρίσκεται στην while γεμίζουμε επίσης τον wait_room (διάδρομος αναμονής) με το id 
του αντίστοιχου νήματος. Έπειτα, εισάγουμε τον μαθητή/νήμα στο αναγνωστήριο, 
κάνουμε τα κατάλληλα prints, και μέσω της sleep δίνουμε τον χρόνο στον μαθητή
για να διαβάσει. Στη συνέχεια, χρησιμοποιούμε και πάλι το mutex για να 
διασφαλίσουμε ότι ένα μόνο νήμα θα εξέρχεται από το δωμάτιο κάθε φορά.
Προτού κάνουμε unlock αυτό το mutex, ελέγχουμε αν το αναγνωστήριο έχει
αδειάσει για να στείλουμε το σήμα στην cond_wait έτσι ώστε να συνεχίσουν
τα προηγούμενα νήματα.